name: "Build legacy Nix package on Ubuntu"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  registry: ghcr.io/2143-labs
  repo: openfront-api-discordbot

jobs:
  build_docker_image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Nix
        uses: cachix/install-nix-action@v31
      #- name: Setup Nix Cache
        #uses: cachix/cachix-action@v10
        #with:
          #name: john2143
          #authToken: ${{ secrets.CACHIX_TOKEN }}
          #github_access_token: ${{ secrets.PAT_PACKAGES }}

      - name: Building package
        run: |
          nix build .#container

      - name: Install skopeo
        run: sudo apt-get install -y skopeo
      - name: Push with skopeo
        run: |
          skopeo login --username ${{ github.actor }} --password "${{ secrets.PAT_PACKAGES }}" ghcr.io
          # Nixos container builds end up here:
          RESULT=$(readlink -f ./result)
          echo "Result path: $RESULT"

          IMAGE_TAG=$(date +%Y%m%d_%H%M)
          BASE_DOCKER_PATH="docker://${{ env.registry }}/${{ env.repo }}"
          skopeo copy docker-archive://$RESULT $BASE_DOCKER_PATH:openfront-api-discordbot-${IMAGE_TAG}
          # if not pull request, then also push as latest
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            skopeo copy docker-archive://$RESULT $BASE_DOCKER_PATH:openfront-api-discordbot-branch-${{ github.head_ref }}
          else
            skopeo copy docker-archive://$RESULT $BASE_DOCKER_PATH:openfront-api-discordbot-latest
          fi
